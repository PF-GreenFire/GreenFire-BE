<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="sisosolsol.greenfire.store.model.dao.StoreMapper">
        <resultMap id="storeListResultMap" type="sisosolsol.greenfire.store.model.dto.StoreListDTO">
            <id property="storeCode" column="store_code"/>
            <result property="createdAt" column="created_at"/>
            <result property="storeName" column="store_name"/>
            <result property="storeStatus" column="store_status"/>
            <result property="storeFoodType" column="store_food_type"/>
            <result property="storeCategoryName" column="store_category_name"/>
            <result property="path" column="path"/>
            <result property="fileName" column="file_name"/>
        </resultMap>
        <resultMap id="applyStoreListResultMap" type="sisosolsol.greenfire.store.model.dto.StoreApplyListDTO">
            <id property="storeCode" column="store_code"/>
            <result property="createdAt" column="created_at"/>
            <result property="storeName" column="store_name"/>
            <result property="storeStatus" column="store_status"/>
            <result property="areaName" column="area_name"/>
        </resultMap>
        <resultMap id="storeDetailResultMap" type="sisosolsol.greenfire.store.model.dto.StoreDetailDTO">
            <id property="storeCode" column="store_code" />
            <result property="storeName" column="store_name" />
            <result property="storeStatus" column="store_status" />
            <result property="storePhone" column="store_phone" />
            <result property="storeLink" column="store_link" />
            <result property="storeBusinessHours" column="store_business_hours" />
            <result property="address" column="address" />
            <result property="storeCategoryName" column="store_category_name" />
            <result property="storeFoodType" column="store_food_type" />
            <result property="detailAddress" column="detail_address" />
            <result property="description" column="description" />
            <result property="storeBreaktimeHours" column="store_breaktime_hours" />
            <collection property="images" ofType="sisosolsol.greenfire.image.model.dto.ImageDTO">
                <id property="imageCode" column="image_code" />
                <result property="path" column="path" />
                <result property="fileName" column="file_name" />
            </collection>
        </resultMap>

        <!--  초록불 장소 목록 조회 TODO: 현재 위치 정보를 기반으로 반경 지도 목록을 보여주는 것으로 수정 예정 -->
        <select id="findStoreList" resultMap="storeListResultMap">
            SELECT
                s.store_code,
                s.created_at,
                s.store_name,
                s.store_status,
                s.store_food_type,
                c.store_category_name,
                i.path,
                i.file_name
            FROM
                tbl_store s
            LEFT JOIN
                tbl_store_category c ON s.store_category_code = c.store_category_code
            LEFT JOIN
                tbl_image i ON i.store_code = s.store_code
            WHERE
                s.store_status = 'APPROVE'
        </select>

        <!-- 관리자 초록불 장소 상태에 따른 목록 페이징 조회를 위한 토탈 갯수 조회 -->
        <select id="countStoresByStoreStatus" resultType="int">
            SELECT COUNT(*)
            FROM tbl_store
            WHERE store_status = #{storeStatus}
        </select>

        <!-- 관리자 초록불 장소 상태에 따른 목록 페이징 조회 [신청 대기, 신청 승인] -->
        <select id="findStoreListByStoreStatus" resultMap="applyStoreListResultMap" parameterType="sisosolsol.greenfire.common.page.SelectCriteria">
            SELECT
                s.store_code,
                s.created_at,
                s.store_name,
                s.store_status,
                a.area_name
            FROM
                tbl_store s
            LEFT JOIN
                tbl_location l ON s.location_code = l.location_code
            LEFT JOIN
                tbl_area a ON l.area_code = a.area_code
            WHERE
                s.store_status = #{storeStatus}
            ORDER BY
                s.created_at DESC
            LIMIT #{criteria.limit} OFFSET #{criteria.offset}
        </select>

        <!-- 초록불 장소 신청 등록 -->
        <insert id="registApplyStore"  useGeneratedKeys="true" keyProperty="storeCreateDTO.storeCode">
            INSERT INTO
                tbl_store (
                    store_name,
                    store_status,
                    store_phone,
                    store_link,
                    store_business_hours,
                    location_code,
                    store_category_code,
                    store_food_type,
                    detail_address,
                    description,
                    store_breaktime_hours,
                    user_code
                )
            VALUES
            (
                #{storeCreateDTO.storeName},
                #{storeCreateDTO.storeStatus},
                #{storeCreateDTO.storePhone},
                #{storeCreateDTO.storeLink},
                #{storeCreateDTO.storeBusinessHours},
                #{locationCode},
                #{storeCreateDTO.storeCategoryCode},
                #{storeCreateDTO.storeFoodType},
                #{storeCreateDTO.detailAddress},
                #{storeCreateDTO.description},
                #{storeCreateDTO.storeBreaktimeHours},
                #{storeCreateDTO.userCode}::uuid
            )
        </insert>

    <!-- 초록불 회원 본인이 신청한 장소 목록 페이징 조회를 위한 토탈 갯수 조회 -->
    <select id="countApplyStoresByUserCode" resultType="int">
        SELECT COUNT(*)
        FROM tbl_store
        WHERE user_code = #{userCode}::uuid
    </select>

    <!-- 초록불 회원 본인이 신청한 장소 목록 페이징 조회 -->
    <select id="findApplyStoreListByUserCode" resultMap="applyStoreListResultMap" parameterType="sisosolsol.greenfire.common.page.SelectCriteria">
        SELECT
            s.store_code,
            s.created_at,
            s.store_name,
            s.store_status,
            a.area_name
        FROM
            tbl_store s
        LEFT JOIN
            tbl_location l ON s.location_code = l.location_code
        LEFT JOIN
            tbl_area a ON l.area_code = a.area_code
        WHERE
            s.user_code = #{userCode}::uuid
        ORDER BY
            s.created_at DESC
        LIMIT #{criteria.limit} OFFSET #{criteria.offset}
    </select>

    <!-- 장소 상세 정보 조회 -->
    <select id="findStoreDetailByStoreCode" resultMap="storeDetailResultMap">
        SELECT
            s.store_code,
            s.store_name,
            s.store_status,
            s.store_phone,
            s.store_link,
            s.store_business_hours,
            l.address,
            c.store_category_name,
            s.store_food_type,
            s.detail_address,
            s.description,
            s.store_breaktime_hours,
            i.path,
            i.file_name
        FROM
            tbl_store s
        LEFT JOIN
            tbl_location l ON s.location_code = l.location_code
        LEFT JOIN
            tbl_store_category c ON s.store_category_code = c.store_category_code
        LEFT JOIN
            tbl_image i ON s.store_code = i.store_code
        WHERE
            s.store_code = #{storeCode}
    </select>

    <!-- 관리자 장소 정보 수정 -->
    <update id="updateStore">
        UPDATE
            tbl_store
        SET
            store_name = #{updateDTO.storeName},
            store_status = #{updateDTO.storeStatus},
            store_phone = #{updateDTO.storePhone},
            store_link = #{updateDTO.storeLink},
            store_business_hours = #{updateDTO.storeBusinessHours},
            location_code = #{locationCode},
            store_category_code = #{updateDTO.storeCategoryCode},
            store_food_type = #{updateDTO.storeFoodType},
            detail_address = #{updateDTO.detailAddress},
            description = #{updateDTO.description},
            store_breaktime_hours = #{updateDTO.storeBreaktimeHours},
            user_code = #{updateDTO.userCode}::uuid

    <!-- 관리자 장소 상태 변경 -->
    <update id="updateStoreStatus">
        UPDATE
            tbl_store
        SET
            store_status = #{storeUpdateStatusDTO.status}
        WHERE
            store_code = #{storeCode}
    </update>
      
</mapper>